[gd_scene load_steps=17 format=2]

[ext_resource path="res://assets/textures/healtbar/player_healthbar_inside.png" type="Texture" id=1]
[ext_resource path="res://assets/textures/healtbar/player_healthbar_outside.png" type="Texture" id=2]
[ext_resource path="res://assets/script/player_interface.gd" type="Script" id=3]

[sub_resource type="VisualShaderNodeVectorOp" id=1]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeVec3Uniform" id=3]
uniform_name = "offset"

[sub_resource type="VisualShaderNodeVectorOp" id=4]

[sub_resource type="Gradient" id=5]
offsets = PoolRealArray( 0, 0.00757576 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=6]
gradient = SubResource( 5 )

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = SubResource( 6 )

[sub_resource type="VisualShaderNodeColorOp" id=8]
operator = 4

[sub_resource type="VisualShaderNodeVectorFunc" id=9]
function = 25

[sub_resource type="VisualShaderNodeVectorOp" id=10]

[sub_resource type="VisualShaderNodeTexture" id=11]
texture = ExtResource( 1 )
texture_type = 1

[sub_resource type="VisualShader" id=12]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_9 : hint_albedo;
uniform vec3 offset;
uniform sampler2D tex_frg_5;



void vertex() {
// Output:0

}

void fragment() {
// Texture:9
	vec4 tex_frg_9_read = texture(tex_frg_9, UV.xy);
	vec3 n_out9p0 = tex_frg_9_read.rgb;
	float n_out9p1 = tex_frg_9_read.a;

// VectorOp:8
	vec3 n_in8p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out8p0 = n_in8p0 + n_out9p0;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorUniform:3
	vec3 n_out3p0 = offset;

// VectorOp:4
	vec3 n_out4p0 = n_out2p0 + n_out3p0;

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out4p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// ColorOp:6
	vec3 n_in6p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out6p0;
	{
		float base = n_out5p0.x;
		float blend = n_in6p1.x;
		if (base < 0.5) {
			n_out6p0.x = 2.0 * base * blend;
		} else {
			n_out6p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out5p0.y;
		float blend = n_in6p1.y;
		if (base < 0.5) {
			n_out6p0.y = 2.0 * base * blend;
		} else {
			n_out6p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out5p0.z;
		float blend = n_in6p1.z;
		if (base < 0.5) {
			n_out6p0.z = 2.0 * base * blend;
		} else {
			n_out6p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}

// VectorFunc:7
	vec3 n_out7p0 = round(n_out6p0);

// VectorOp:10
	vec3 n_out10p0 = n_out7p0 * vec3(n_out9p1);

// Output:0
	COLOR.rgb = n_out8p0;
	COLOR.a = dot(n_out10p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -123.457, 456 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 400, 340 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( -780, 300 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( -680, 480 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( -468.932, 383 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( -260, 300 )
nodes/fragment/6/node = SubResource( 8 )
nodes/fragment/6/position = Vector2( -60, 380 )
nodes/fragment/7/node = SubResource( 9 )
nodes/fragment/7/position = Vector2( -40, 300 )
nodes/fragment/8/node = SubResource( 10 )
nodes/fragment/8/position = Vector2( 173.383, 483.03 )
nodes/fragment/9/node = SubResource( 11 )
nodes/fragment/9/position = Vector2( -240, 520 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 155.051, 297.087 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 1, 4, 0, 5, 0, 5, 0, 6, 0, 6, 0, 7, 0, 9, 0, 8, 1, 7, 0, 10, 0, 9, 1, 10, 1, 2, 0, 4, 0, 10, 0, 0, 1, 8, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 12 )
shader_param/offset = Vector3( -1, 0, 0 )

[node name="ui" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="healthbar" type="Control" parent="."]
anchor_left = 0.036
anchor_top = 0.868
anchor_right = 0.317
anchor_bottom = 0.955
margin_left = 0.135998
margin_top = 0.199951
margin_right = 0.391998
__meta__ = {
"_edit_use_anchors_": false
}

[node name="inside" type="Sprite" parent="healthbar"]
material = SubResource( 13 )
position = Vector2( 143.83, 25.4628 )
scale = Vector2( 0.3, 0.3 )
texture = ExtResource( 1 )

[node name="outside" type="Sprite" parent="healthbar"]
position = Vector2( 143.83, 25.4628 )
scale = Vector2( 0.3, 0.3 )
texture = ExtResource( 2 )
